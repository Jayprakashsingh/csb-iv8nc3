{"version":3,"sources":["List.js","App.js","index.js"],"names":["List","useState","selectedOpt","setSelectedOpt","resultData","setResultData","totalCount","setTotalCount","page","setPage","useEffect","getdata","selectedDate","moment","subtract","format","console","log","url","fetch","then","res","json","items","map","item","open","total_count","className","onChange","e","target","value","onchangeDD","dataLength","next","hasMore","loader","index","style","border","Container","Row","Col","display","marginRight","paddingRight","src","owner","avatar_url","width","height","alt","name","description","score","open_issues_count","onClick","tempData","data","idx","changeMet","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.58d5f2b4.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function List() {\r\n  const [selectedOpt, setSelectedOpt] = useState(\"1\");\r\n  const [resultData, setResultData] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  // const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getdata();\r\n  }, [selectedOpt]);\r\n  let selectedDate = \"\";\r\n  const getdata = () => {\r\n    // let selectedDate = \"\";\r\n    if (selectedOpt === \"1\") {\r\n      selectedDate = moment().subtract(7, \"days\").format(\"YYYY-MM-DD\");\r\n    } else if (selectedOpt === \"2\") {\r\n      selectedDate = moment().subtract(14, \"days\").format(\"YYYY-MM-DD\");\r\n    } else {\r\n      selectedDate = moment().subtract(1, \"months\").format(\"YYYY-MM-DD\");\r\n    }\r\n\r\n    console.log(selectedDate);\r\n\r\n    let url = `https://api.github.com/search/repositories?q=created:>${selectedDate}&sort=stars&order=desc&page=${page}`;\r\n\r\n    console.log(url);\r\n\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setPage(page + 1);\r\n\r\n        setResultData([\r\n          ...resultData,\r\n          ...json?.items?.map((item) => {\r\n            return { ...item, open: false };\r\n          })\r\n        ]);\r\n\r\n        setTotalCount(json.total_count);\r\n      });\r\n  };\r\n\r\n  const changeMet = (index) => {\r\n    let tempData = resultData.map((data, idx) => {\r\n      if (index === idx) {\r\n        console.log(index, idx);\r\n        let url = `https://api.github.com/search/repositories?q=created:>${selectedDate}&sort=stars&order=desc&page=${page}`;\r\n\r\n        console.log(url);\r\n\r\n        fetch(url)\r\n          .then((res) => res.json())\r\n          .then((json) => {\r\n            console.log(\"testttttttttttttttt\");\r\n            console.log(json);\r\n            // setPage(page + 1);\r\n\r\n            setTotalCount(json.total_count);\r\n          });\r\n        return { ...data, open: !data.open };\r\n      } else {\r\n        return { ...data, open: false };\r\n      }\r\n    });\r\n\r\n    setResultData(tempData);\r\n\r\n    // 👇️ {one: false, two: false, three: false}\r\n    // console.log(tempData);\r\n  };\r\n\r\n  const onchangeDD = (e) => {\r\n    console.log(e.target.value);\r\n    setSelectedOpt(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <select onChange={(e) => onchangeDD(e)} value={selectedOpt}>\r\n        <option value=\"1\">1 week</option>\r\n        <option value=\"2\">2 week</option>\r\n        <option value=\"3\">1 month</option>\r\n      </select>\r\n      <div>\r\n        <InfiniteScroll\r\n          dataLength={totalCount}\r\n          next={() => getdata()}\r\n          hasMore={true}\r\n          loader={<h4>Loading...</h4>}\r\n        >\r\n          {resultData.map((item, index) => (\r\n            <div key={index}>\r\n              <br></br>\r\n              <div style={{ border: \"1px solid rgba(0, 0, 0, 0.05)\" }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline\",\r\n                          marginRight: \"50%\",\r\n                          paddingRight: \"50%\"\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={item.owner.avatar_url}\r\n                          width={80}\r\n                          height={80}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row>{item.name}</Row>\r\n                      <Row>{item.description}</Row>\r\n                      <Row>{item.score}</Row>\r\n                      <Row>{item.open_issues_count}</Row>\r\n                      <button onClick={() => changeMet(index)}>\r\n                        {\" \"}\r\n                        aero img\r\n                      </button>\r\n                      {item.open === true && <div>aero down</div>}\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n              {/* <div>Repository name: {item.name}</div> */}\r\n              {/* <br></br>\r\n              <br></br>\r\n              <div>Repository description: {item.description}</div>\r\n              <br></br>\r\n              <br></br>\r\n              <div>Number of stars : {item.score}</div>\r\n              <br></br>\r\n              <br></br>\r\n              <div>Number of issues: {item.open_issues_count}</div>\r\n              <br></br>\r\n              <br></br>\r\n              <div>Username : {item.owner.login}</div>\r\n              <br></br>\r\n              <br></br>\r\n              <button onClick={() => changeMet(index)}> aero img</button>\r\n              {item.open === true && <div>aero down</div>} */}\r\n            </div>\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import List from \"./List\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <List />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}